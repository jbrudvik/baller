#!/usr/bin/env node

var program = require('commander');

var baller = require('../lib');
var pkg = require('../package.json');


program
  .version(pkg.version);

program
  .command('create <name>')
  .description('Create a new, empty ball in a new directory')
  .action(actionWrapper(baller.create));

program
  .command('init')
  .description('Initialize current directory and files as a ball')
  .action(actionWrapper(baller.init));

program
  .command('destroy')
  .description('Remove all Baller-introduced files and structure from current ball')
  .action(actionWrapper(baller.destroy));


program.parse(process.argv);


if (!program.args.length) {
  program.help();
}


/*
 * Takes a function and returns a new function that, when invoked, calls
 * the given function and logs the value returned to stdout. If any error
 * is thrown by the given function, the new function logs the error messsage
 * to stderr and exits the current process with a non-zero exit code.
 */
function actionWrapper(f) {
  return function () {
    try {
      var message = f.apply(null, arguments);
      console.log(message);
    } catch (e) {
      console.error(e.message);
      process.exit(1);
    }
  };
}
